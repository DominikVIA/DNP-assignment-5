@page "/AllPosts"
@using ApiContracts.Posts
@using BlazorApp1.Services
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavManager
<h3>All Posts</h3>

@if (posts == null)
{
    <p>
        <em>Loading...</em>
    </p>
}
else
{
<table class="table">
    <thead>
    <tr>
        <th>Title</th>
        <th>Date posted</th>
        <th>Comments</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var post in posts)
    {
        <Modal @ref="modal"/>
        <tr @onclick="() => ShowPostModal(post)">
            <td>@post.title</td>
            <td>@post.dateCreated.Date.ToString()</td>
            <td>@(post.comments != null ? post.comments.Count : 0)</td>
        </tr>
    }
    </tbody>
</table>
}


@code {
    [Inject] public IPostService PostService { get; set; }

    private PostDto[] posts;
    private Modal modal = default!;
    private int? selectedPostId;

    private async Task ShowPostModal(PostDto post)
    {
        var parameters = new Dictionary<string, object>();
        parameters.Add("Post", post);
        parameters.Add("OnclickCallback", EventCallback.Factory.Create<MouseEventArgs>(this, AddComment));
        selectedPostId = post.Id;
        await modal.ShowAsync<PostModal>(title: "Post details", parameters: parameters);
    }

    private async Task AddComment(MouseEventArgs e)
    {
        NavManager.NavigateTo($"/AddComment/{selectedPostId}");
    }
    
    protected override async Task OnInitializedAsync()
    {
        posts = (await PostService.GetAllPostsAsync()).AsEnumerable().ToArray();
        await InvokeAsync(StateHasChanged);
    }
}
