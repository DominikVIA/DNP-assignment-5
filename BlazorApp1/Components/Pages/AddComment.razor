@page "/AddComment"
@page "/AddComment/{postId}"
@using ApiContracts.Comments
@using ApiContracts.Posts
@using BlazorApp1.Services
@using Microsoft.AspNetCore.Components
@inject NavigationManager NavManager

@if (_postDto != null)
{
    <h3>Post being commented on: @_postDto.title, @_postDto.body, @_postDto.author.Username</h3>
    
    <hr/>

    <h3>Adding comment:</h3>
    <ul>
        <li>
            <label for="authorId">ID of the author</label>
            <input @bind="AuthorId" id="authorId"/>
        </li>
        <li>
            <label for="body">The comment text</label>
            <input @bind="Body" id="body"/>
        </li>
    </ul>

<Button class="mt-3" Color="ButtonColor.Success" Type="ButtonType.Button" @onclick="CreateComment">
    Add comment
</Button>
}

@functions
{
    [Parameter] public string? postId { get; set; }
}

@code {
    [Inject] public IPostService PostService { get; set; }
    [Inject] public ICommentService CommentService { get; set; }
    
    private PostDto? _postDto;
    private int AuthorId { get; set; }
    private string Body { get; set; }
    
    private async Task CreateComment()
    {
        CommentService.AddCommentAsync(new CreateCommentDto
        {
            AuthorId = AuthorId,
            Body = Body,
            RespondingToId = _postDto!.Id
        });
        NavManager.NavigateTo("/AllPosts");
    }
    
    protected override async Task OnInitializedAsync()
    {
        try
        {
            _postDto = await PostService.GetSinglePostAsync(int.Parse(postId));
        }
        catch(Exception e)
        {
            _postDto = null;
        }
        await InvokeAsync(StateHasChanged);
    }
}