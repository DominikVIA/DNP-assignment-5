@using ApiContracts.Comments
@using ApiContracts.Posts
@using Microsoft.AspNetCore.Components
<div class="row">
    <div class="col-5 col-md-3 text-end">Title:</div>
    <div class="col-7 col-md-9">@post?.title</div>
</div>
<div class="row">
    <div class="col-5 col-md-3 text-end">Body:</div>
    <div class="col-7 col-md-9">@post?.body</div>
</div>
<div class="row">
    <div class="col-5 col-md-3 text-end">Author:</div>
    <div class="col-7 col-md-9">@post?.author.Username</div>
</div>
<div class="row">
    <div class="col-5 col-md-3 text-end">Likes:</div>
    <div class="col-7 col-md-9">@post?.likes</div>
</div>
<div class="row">
    <div class="col-5 col-md-3 text-end">Dislikes:</div>
    <div class="col-7 col-md-9">@post?.dislikes</div>
</div>
@if (post?.comments != null && post?.comments.Count != 0)
{
<table class="table">
    <thead>
    <tr>
        <th>Body</th>
        <th>Date Created</th>
        <th>Author</th>
    </tr>
    </thead>
    <tbody>
    @foreach (var comment in @post?.comments)
    {
    <tr>
        <td>@comment.Body</td>
        <td>@comment.DateCreated.Date.ToString()</td>
        <td>@comment.Author.Username</td>
    </tr>
    }
    </tbody>
</table>
}


<Button class="mt-3" Color="ButtonColor.Success" Type="ButtonType.Button" @onclick="OnClickCallback">
    Add comment
</Button>

@code {
     private PostDto? post;

     [Parameter] public PostDto Post { get; set; }
     [Parameter] public EventCallback<MouseEventArgs> OnClickCallback { get; set; }

protected async override void OnInitialized()
{
    post = Post;
    await base.OnInitializedAsync();
}
}